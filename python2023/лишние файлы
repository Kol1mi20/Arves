 if message.text == "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ ‚öôÔ∏è":
      markup = types.InlineKeyboardMarkup()
      markup.add(types.InlineKeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è",url = "https://t.me/AnastasiaNMN"))
      await bot.send_message(message.from_user.id, f"–ê–∫–∫–∞—É–Ω—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏",reply_markup=markup)
      await bot.send_message(message.from_user.id,f"",reply_markup=nav.nazad)
    if message.text == "‚ùî FAQ ‚ùî":
       await bot.send_message(message.from_user.id,'<a href = "https://telegra.ph/FAQ-ARVES-10--Otvety-na-samye-chastye-voprosy-06-25">–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä–∞–±–æ—Ç–µ —Å –±–æ—Ç–æ–º</a>\n\n <b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:</b>\n/start - –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –±–æ—Ç–∞\n/stop - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞ (–ø–æ–ª–µ–∑–Ω–æ, –µ—Å–ª–∏ –±–æ—Ç –Ω–∞—á–∞–ª –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è)\n/help - –°—Å—ã–ª–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é',parse_mode="HTML")
       await bot.send_message(message.from_user.id,"–í—ã –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏–ª–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é?",reply_markup=nav.faq)
       if message.text == "–î–∞üòä":
         await bot.send_message(message.from_user.id,"–ú–æ–ª–æ–¥–µ—Ü!")
         pass
       if message.text == "–ù–µ—Ç,—è –Ω–µ–≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π üòî":
          markup1 = types.InlineKeyboardMarkup()
          markup1.add(types.InlineKeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è",url = "https://t.me/AnastasiaNMN"))
          await bot.send_message(message.from_user.id, f"–ê–∫–∫–∞—É–Ω—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏",reply_markup=markup1)

 await bot.send_message(message.from_user.id, f"ü§ù<i><b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</b></i>\n\n<i>üë•–í –Ω–∞—à–µ–º –±–æ—Ç–µ –∏–º–µ–µ—Ç—Å—è –æ–¥–Ω–æ—É—Ä–æ–≤–Ω–µ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:\n1 —É—Ä–æ–≤–µ–Ω—å - 15 % –æ—Ç –∑–∞—Ä–∞–±–æ—Ç–∫–∞\n\n\n‚úîÔ∏è–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç–µ —Å –∏—Ö –∑–∞—Ä–∞–±–æ—Ç–∫–∞!\n\nüëÅ‚Äçüó®–°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:</i>\n<code>https://t.me/Gosha4728_Bot?start={message.from_user.id}</code>",parse_mode="HTML",reply_markup=nav.ref)















 import logging
from aiogram import Bot, Dispatcher, executor, types
import config as cfg
import markups as nav
from db import DataBase

logging.basicConfig(level=logging.INFO)

bot = Bot(token=cfg.TOKEN)
dp = Dispatcher(bot)
db = DataBase('database')

@dp.message_handler(commands=["start"])
async def start(message: types.Message):
  if message.chat.type =="private":
    if not db.user_exists(message.from_user.id):
      start_command = message.text 
      referrer_id = str(start_command[7:])
      if str(referrer_id) != "":
        if str(referrer_id) != str(message.from_user.id):
          db.add_user(message.from_user.id, referrer_id)
          try:
            await bot.send_message(referrer_id, "–ü–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!")
          except:
            pass
        else:
          db.add_user(message.from_user.id)
          await bot.send_message(message.from_user.id, "–ù–µ–ª—å–∑—è —Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ!")
      else:
        db.add_user(message.from_user.id)
       
    
    await bot.send_message(message.from_user.id, f"<i><b>MAIN MENU</b></i>\n\n<i><b>{message.from_user.first_name}</b></i>\n<i>/start - <b>–æ–±–Ω–æ–≤–∏—Ç—å</b></i>\n<i><b>–í–∞—à id:</b></i><code>{message.from_user.id}</code>\n\n\n<b>üí≥–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–π:</b> 0\n\n\n<b>üë•–ö–æ–ª-–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:</b> {db.count_reeferals(message.from_user.id)}\n\n\nüíµ–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –Ω–∞ –∑–∞–¥–∞–Ω–∏—è—Ö: 0‚ÇΩ\nüí∑–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –Ω–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞—Ö: 0‚ÇΩ\nüßæ–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: 0‚ÇΩ\n\n<b>üí∞–ë–∞–ª–∞–Ω—Å:</b> 0‚ÇΩ\n\n<b>–í–∞—à —Å—Ç–∞—Ç—É—Å:</b> –û–±—ã—á–Ω—ã–π\n\n<b>–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å VIP —Å—Ç–∞—Ç—É—Å,–Ω—É–∂–Ω–æ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å 2500‚ÇΩ –≤ –±–æ—Ç–µ!</b>\n\n\n<a href ='https://t.me/Arves_Sxem'><i><b>üó£[–ü–ï–†–ï–ô–¢–ò –í –ö–ê–ù–ê–õ]</b></i></a>\n<a href = 'https://t.me/Arves_Chat'><i><b>üó£[–ü–ï–†–ï–ô–¢–ò –í –ß–ê–¢]</b></i></a>", reply_markup=nav.mainMenu,parse_mode="HTML",disable_web_page_preview=True)
    
async def start2(message: types.Message):
  if message.chat.type =="private":
    if not db.user_exists(message.from_user.id):
      start_command = message.text 
      referrer_id = str(start_command[7:])
      if str(referrer_id) != "":
        if str(referrer_id) != str(message.from_user.id):
          db.add_user(message.from_user.id, referrer_id)
          try:
            await bot.send_message(referrer_id, "–ü–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!")
          except:
            pass
        else:
          db.add_user(message.from_user.id)
          await bot.send_message(message.from_user.id, "–ù–µ–ª—å–∑—è —Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ!")
      else:
        db.add_user(message.from_user.id)
       
    
    await bot.send_message(message.from_user.id, f"<i><b>MAIN MENU</b></i>\n\n<i><b>{message.from_user.first_name}</b></i>\n<i>/start - <b>–æ–±–Ω–æ–≤–∏—Ç—å</b></i>\n<i><b>–í–∞—à id:</b></i><code>{message.from_user.id}</code>\n\n\n<b>üí≥–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–π:</b> 0\n\n\n<b>üë•–ö–æ–ª-–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:</b> {db.count_reeferals(message.from_user.id)}\n\n\nüíµ–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –Ω–∞ –∑–∞–¥–∞–Ω–∏—è—Ö: 0‚ÇΩ\nüí∑–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –Ω–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞—Ö: 0‚ÇΩ\nüßæ–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: 0‚ÇΩ\n\n<b>üí∞–ë–∞–ª–∞–Ω—Å:</b> 0‚ÇΩ\n\n<b>–í–∞—à —Å—Ç–∞—Ç—É—Å:</b> –û–±—ã—á–Ω—ã–π\n\n<b>–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å VIP —Å—Ç–∞—Ç—É—Å,–Ω—É–∂–Ω–æ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å 2500‚ÇΩ –≤ –±–æ—Ç–µ!</b>\n\n\n<a href ='https://t.me/Arves_Sxem'><i><b>üó£[–ü–ï–†–ï–ô–¢–ò –í –ö–ê–ù–ê–õ]</b></i></a>\n<a href = 'https://t.me/Arves_Chat'><i><b>üó£[–ü–ï–†–ï–ô–¢–ò –í –ß–ê–¢]</b></i></a>", reply_markup=nav.mainMenu,parse_mode="HTML",disable_web_page_preview=True)
  
@dp.message_handler()
async def start1(message: types.Message):
  if message.chat.type == "private":
    if message.text == "–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞üë•":
       await bot.send_message(message.from_user.id, f"ü§ù<i><b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</b></i>\n\n<i>üë•–í –Ω–∞—à–µ–º –±–æ—Ç–µ –∏–º–µ–µ—Ç—Å—è –æ–¥–Ω–æ—É—Ä–æ–≤–Ω–µ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:\n1 —É—Ä–æ–≤–µ–Ω—å - 15 % –æ—Ç –∑–∞—Ä–∞–±–æ—Ç–∫–∞\n\n\n‚úîÔ∏è–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç–µ —Å –∏—Ö –∑–∞—Ä–∞–±–æ—Ç–∫–∞!\n\nüëÅ‚Äçüó®–°—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:</i>\n<code>https://t.me/Gosha4728_Bot?start={message.from_user.id}</code>",parse_mode="HTML",reply_markup=nav.ref)
       if message.text == "üëå":
         await function(start2)
    if message.text == "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ ‚öôÔ∏è":
      markup = types.InlineKeyboardMarkup()
      markup.add(types.InlineKeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è",url = "https://t.me/AnastasiaNMN"))
      await bot.send_message(message.from_user.id, f"–ê–∫–∫–∞—É–Ω—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏",reply_markup=markup)
      await bot.send_message(message.from_user.id,f"",reply_markup=nav.nazad)
    if message.text == "‚ùî FAQ ‚ùî":
       await bot.send_message(message.from_user.id,'<a href = "https://telegra.ph/FAQ-ARVES-10--Otvety-na-samye-chastye-voprosy-06-25">–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä–∞–±–æ—Ç–µ —Å –±–æ—Ç–æ–º</a>\n\n <b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:</b>\n/start - –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –±–æ—Ç–∞\n/stop - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞ (–ø–æ–ª–µ–∑–Ω–æ, –µ—Å–ª–∏ –±–æ—Ç –Ω–∞—á–∞–ª –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è)\n/help - –°—Å—ã–ª–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é',parse_mode="HTML")
       await bot.send_message(message.from_user.id,"–í—ã –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏–ª–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é?",reply_markup=nav.faq)
       if message.text == "–î–∞üòä":
         await bot.send_message(message.from_user.id,"–ú–æ–ª–æ–¥–µ—Ü!")
         pass
       if message.text == "–ù–µ—Ç,—è –Ω–µ–≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π üòî":
          markup1 = types.InlineKeyboardMarkup()
          markup1.add(types.InlineKeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è",url = "https://t.me/AnastasiaNMN"))
          await bot.send_message(message.from_user.id, f"–ê–∫–∫–∞—É–Ω—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏",reply_markup=markup1)
     

   
         
      

  
     
      
    
    


  
  
  

if __name__ == "__main__":
  executor.start_polling(dp, skip_updates=True)










  if message.chat.type == "private":
    if message.from_user.id == 5087149698:
        text = message.text[9:]
        users = db1.get_users()
        for row in users:
            try:
              await bot.send_message(row[0], text)
              if int(row[1]) != 1:
               db1.set_active(row[0], 1)
            except:
               db1.set_active(row[0], 0)
        await bot.send_message(message.from_user.id,"–£—Å–ø–µ—à–Ω–æ!")


        await asyncio.sleep(.05) 

        bot.copy_message


        await bot.copy_message(chat_id=callback.from_user.id,from_chat_id = user_id,message_id = saved_message.message_id)

        copied_message = await message.copy_to(chat_id=user_id)
        await bot.send_message(chat_id=)

        row[0],(await state.get_data()).get("rassulk")


        withdraw_requests = get_withdraw_requests()

    if not withdraw_requests:
        await message.answer("–ù–µ—Ç –æ–∂–∏–¥–∞—é—â–∏—Ö –∑–∞—è–≤–æ–∫ –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤.")
    else:
        for request in withdraw_requests:
            request_id, user_id, username, bank, amount, status = request
            await message.answer(f"–ó–∞—è–≤–∫–∞ #{request_id}\n"
                                 f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username} (ID: {user_id})\n"
                                 f"–ë–∞–Ω–∫: {bank}\n"
                                 f"–°—É–º–º–∞: {amount}‚ÇΩ\n"
                                 f"–°—Ç–∞—Ç—É—Å: {status}",
                                 reply_markup=types.InlineKeyboardMarkup(inline_keyboard=[
                                     [types.InlineKeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"approve_{request_id}"),
                                      types.InlineKeyboardButton(text="–û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{request_id}")]
                                 ]))


@dp.callback_query_handler(lambda query: query.data.startswith(('approve_', 'reject_')))
async def process_withdraw_request(callback_query: types.CallbackQuery):
    action, request_id = callback_query.data.split('_')
    request_id = int(request_id)

    if action == 'approve':
        approve_withdraw_request(request_id)
        await bot.send_message(callback_query.from_user.id, f"–ó–∞—è–≤–∫–∞ #{request_id} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞.")
    elif action == 'reject':
        reject_withdraw_request(request_id)
        await bot.send_message(callback_query.from_user.id, f"–ó–∞—è–≤–∫–∞ #{request_id} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–ª—è –≤—ã–≤–æ–¥–∞ –±–∞–ª–∞–Ω—Å–∞
async def send_balance_menu(user_id):
    user_balance = get_user_balance(user_id)
    balance_keyboard = ReplyKeyboardMarkup(resize_keyboard=True).add(
        KeyboardButton(f"–ë–∞–ª–∞–Ω—Å: {user_balance}‚ÇΩ")
    )
    await bot.send_message(user_id, "–í–∞—à –±–∞–ª–∞–Ω—Å:", reply_markup=balance_keyboard)

def get_user_balance(user_id):
  conn = sqlite3.connect('database')
  c = conn.cursor()
  c.execute("SELECT BALANCE FROM users WHERE user_id=?",(user_id,))
  user_balance = c.fetchone()
  conn.close()
  return user_balance[0] if user_balance else 0.0

def update_user_balance(user_id, new_balance):
  conn = sqlite3.connect('database')
  c = conn.cursor()
  c.execute("UPDATE users SET BALANCE=? WHERE user_id=?",(new_balance,user_id))
  conn.commit()
  conn.close()



import sqlite3
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.middlewares.logging import LoggingMiddleware
from aiogram.types import ParseMode

API_TOKEN = 'YOUR_API_TOKEN'  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
ADMIN_USER_ID = 123456789  # –ó–∞–º–µ–Ω–∏ –Ω–∞ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
conn = sqlite3.connect('database.db')  # –°–æ–∑–¥–∞–π SQLite –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º database.db

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")

@dp.message_handler(user_id=ADMIN_USER_ID, commands=['change_balance'])
async def change_balance(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    add_button = types.KeyboardButton("–ù–∞—á–∏—Å–ª–∏—Ç—å –±–∞–ª–∞–Ω—Å")
    subtract_button = types.KeyboardButton("–û—Ç–Ω—è—Ç—å –±–∞–ª–∞–Ω—Å")
    keyboard.add(add_button, subtract_button)
    await message.reply("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

@dp.message_handler(user_id=ADMIN_USER_ID, text="–ù–∞—á–∏—Å–ª–∏—Ç—å –±–∞–ª–∞–Ω—Å")
async def add_balance(message: types.Message):
    await message.reply("–í–≤–µ–¥–∏—Ç–µ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —É –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å:")

@dp.message_handler(user_id=ADMIN_USER_ID)
async def process_user_id(message: types.Message):
    user_id_to_change = message.text
    cursor = conn.cursor()
    cursor.execute("SELECT BALANCE FROM users WHERE USER_ID=?", (user_id_to_change,))
    user_balance = cursor.fetchone()
    conn.commit()
    await message.reply(f"–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_balance[0]}. –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É:")

@dp.message_handler(user_id=ADMIN_USER_ID, content_types=types.ContentTypes.TEXT)
async def process_amount(message: types.Message):
    amount = float(message.text)
    user_id_to_change = ...  # –ü–æ–ª—É—á–∏ user_id, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ü–∏—è
    cursor = conn.cursor()
    cursor.execute("SELECT BALANCE FROM users WHERE USER_ID=?", (user_id_to_change,))
    user_balance = cursor.fetchone()[0]
    if (user_balance + amount) < 0:
        await message.reply("–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏—é. –ë–∞–ª–∞–Ω—Å —Å—Ç–∞–Ω–µ—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º.")
    else:
        cursor.execute("UPDATE users SET BALANCE=BALANCE+? WHERE USER_ID=?", (amount, user_id_to_change))
        conn.commit()
        await message.reply(f"–ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω. –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {user_balance + amount}")

if name == 'main':
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True)






import sqlite3
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.middlewares.logging import LoggingMiddleware
from aiogram.types import ParseMode

API_TOKEN = 'YOUR_API_TOKEN'  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
ADMIN_USER_ID = 123456789  # –ó–∞–º–µ–Ω–∏ –Ω–∞ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
conn = sqlite3.connect('database.db')  # –°–æ–∑–¥–∞–π SQLite –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º database.db

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")

@dp.message_handler(user_id=ADMIN_USER_ID, commands=['change_balance'])
async def change_balance(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    add_button = types.KeyboardButton("–ù–∞—á–∏—Å–ª–∏—Ç—å –±–∞–ª–∞–Ω—Å")
    subtract_button = types.KeyboardButton("–û—Ç–Ω—è—Ç—å –±–∞–ª–∞–Ω—Å")
    keyboard.add(add_button, subtract_button)
    await message.reply("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

@dp.message_handler(user_id=ADMIN_USER_ID, text="–ù–∞—á–∏—Å–ª–∏—Ç—å –±–∞–ª–∞–Ω—Å")
async def add_balance(message: types.Message):
    await message.reply("–í–≤–µ–¥–∏—Ç–µ –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —É –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å:")

@dp.message_handler(user_id=ADMIN_USER_ID)
async def process_user_id(message: types.Message):
    user_id_to_change = message.text
    cursor = conn.cursor()
    cursor.execute("SELECT BALANCE FROM users WHERE USER_ID=?", (user_id_to_change,))
    user_balance = cursor.fetchone()
    conn.commit()
    await message.reply(f"–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_balance[0]}. –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É:")

@dp.message_handler(user_id=ADMIN_USER_ID, content_types=types.ContentTypes.TEXT)
async def process_amount(message: types.Message):
    amount = float(message.text)
    user_id_to_change = ...  # –ü–æ–ª—É—á–∏ user_id, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ü–∏—è
    cursor = conn.cursor()
    cursor.execute("SELECT BALANCE FROM users WHERE USER_ID=?", (user_id_to_change,))
    user_balance = cursor.fetchone()[0]
    new_balance = user_balance + amount
    cursor.execute("UPDATE users SET BALANCE=? WHERE USER_ID=?", (new_balance, user_id_to_change))
    conn.commit()
    await message.reply(f"–ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω. –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {new_balance}")

if name == 'main':
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True)


